{"version":3,"file":"static/js/cast.620b90c8.chunk.js","mappings":"6NAGe,SAASA,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QACjC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYL,GAASM,MAAK,SAAAC,GACxBA,EAAOC,KAAKC,OAAS,EAChBF,EAAOC,KAAKC,OAAS,GACtBN,EAAUI,EAAOC,MACrBL,EAAUI,EAAOC,WAElB,CAACR,KAGF,8BACGE,EAAOO,OAAS,GACf,wBACGP,EAAOQ,KAAI,SAAAC,GAAK,OACf,2BACE,gBACEC,IAAG,yCAAoCD,EAAME,cAC7CC,IAAKH,EAAMI,QAEb,uBAAIJ,EAAMI,QACV,sCAAcJ,EAAMK,eANbL,EAAMM,UAWnB","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchCredit } from '../../services/film-api';\n\nexport default function CastPage({ movieId }) {\n  const [actors, setActors] = useState('');\n\n  useEffect(() => {\n    fetchCredit(movieId).then(result => {\n      result.cast.length > 1\n        ? (result.cast.length = 10)\n        : setActors(result.cast);\n      setActors(result.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {actors.length > 1 ? (\n        <ul>\n          {actors.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                alt={actor.name}\n              />\n              <p>{actor.name}</p>\n              <p>Character:{actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3>No cast found! Sorry:(</h3>\n      )}\n    </>\n  );\n}\n"],"names":["CastPage","movieId","useState","actors","setActors","useEffect","fetchCredit","then","result","cast","length","map","actor","src","profile_path","alt","name","character","id"],"sourceRoot":""}